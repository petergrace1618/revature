SQL/Postgre
==========
---
SELECT continent, name, population FROM world x
  WHERE population >= ALL
    (SELECT population FROM world y
        WHERE y.continent=x.continent
          AND population>0)


A correlated subquery works like a nested loop: the subquery only has access to rows related to a single record at a time in the outer query. The technique relies on table aliases to identify two different uses of the same table, one in the outer query and the other in the subquery.

One way to interpret the line in the WHERE clause that references the two table is “… where the correlated values are the same”.

In the example provided, you would say “select the country details from world where the population is greater than or equal to the population of all countries where the continent is the same”.
---
constraints: 
- primary key, 
- foreign key (referential integrity)
- unique key, 
- composite key, 
- not null, 
- check, 
- default
DDL: create, alter, turncate, drop
DML: CRUD
TCL (Transaction Control Language): commit, rollback, savepoint
DQL: select
DCL (data control): grant revoke

SELECT col1, col2, ... colN FROM table
WHERE condition or expression
GROUPBY category
HAVING apply_filter on group by results
ORDER BY col1 ASC(default) DESC;

---
Problem: trouble logging into DBeaver
Program Files x86/PostgreSQL/10/data/pg_hba.conf
change METHOD column of rows host/all to trust
---
Postgre superuser password
P16ostgre!
port 5432
---
Postgres settings
Installation Directory: C:\Program Files\PostgreSQL\10
Server Installation Directory: C:\Program Files\PostgreSQL\10
Data Directory: C:\Program Files\PostgreSQL\10\data
Database Port: 5432
Database Superuser: postgres
Operating System Account: NT AUTHORITY\NetworkService
Database Service: postgresql-x64-10
Command Line Tools Installation Directory: C:\Program Files\PostgreSQL\10
pgAdmin4 Installation Directory: C:\Program Files\PostgreSQL\10\pgAdmin 4
